{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Origami",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#types"
    },
    {
      "include": "#annotations"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.origami",
          "match": "//.*$"
        },
        {
          "name": "comment.block.origami",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.origami",
          "match": "\\b(if|else|elseif|while|for|foreach|do|switch|case|default|break|continue|return|try|catch|finally|throw|match|spawn|like|instanceof)\\b"
        },
        {
          "name": "keyword.other.origami",
          "match": "\\b(class|interface|trait|extends|implements|namespace|use|function|func|const|var|let|public|private|protected|static|abstract|final|parent|this|self|new|echo|print|include|require|require_once|include_once)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.origami",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.origami",
              "match": "\\\\."
            },
            {
              "name": "variable.other.interpolation.origami",
              "match": "\\{\\$[a-zA-Z_][a-zA-Z0-9_]*\\}"
            },
            {
              "name": "meta.embedded.expression.origami",
              "match": "@\\{[^}]*\\}"
            }
          ]
        },
        {
          "name": "string.quoted.single.origami",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.origami",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.origami",
          "match": "\\b[0-9]+\\.[0-9]+\\b"
        },
        {
          "name": "constant.numeric.integer.origami",
          "match": "\\b[0-9]+\\b"
        }
      ]
    },
    "variables": {
      "name": "variable.other.origami",
      "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.origami",
          "match": "(===|!==|==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.logical.origami",
          "match": "(&&|\\|\\||!)"
        },
        {
          "name": "keyword.operator.assignment.origami",
          "match": "(\\+=|-=|\\*=|/=|%=|=)"
        },
        {
          "name": "keyword.operator.arithmetic.origami",
          "match": "(\\+|-|\\*|/|%)"
        },
        {
          "name": "keyword.operator.other.origami",
          "match": "(->|::|\\?\\?|\\.|\\?)"
        }
      ]
    },
    "functions": {
      "name": "entity.name.function.origami",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.primitive.origami",
          "match": "\\b(int|string|bool|float|array|object|void|null)\\b"
        },
        {
          "name": "storage.type.nullable.origami",
          "match": "\\?\\b(int|string|bool|float|array|object)\\b"
        },
        {
          "name": "entity.name.type.class.origami",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "annotations": {
      "name": "meta.annotation.origami",
      "match": "@[a-zA-Z_][a-zA-Z0-9_]*"
    }
  },
  "scopeName": "source.origami"
}
